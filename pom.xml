<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- address of project -->
	<groupId>com.xiam</groupId>
	<artifactId>fred</artifactId>
	<version>1.1</version>
	<packaging>jar</packaging>

	<name>fred</name>
	<url>http://maven.apache.org</url> <!-- expects you to override with url of company -->

	<distributionManagement>
		<repository>
			<id>localhost_nexus_releases</id>
			<name>Localhost Nexus Releases</name>
			<url>http://localhost:8082/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>localhost_nexus_snapshots</id>
			<name>Localhost Nexus Snapshots</name>
			<url>http://localhost:8082/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<company.name>xiam1</company.name>
		<company.url>http://www.xiam.com</company.url>
		<db.driver>com.mysql.Driver</db.driver>
		<db.password>secret</db.password>
		<db.user>conor</db.user>
		<db.url>http://localhost:3306/${project.artifactId}</db.url>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope> <!-- only want to use junit during test phase. It will not be loaded for 
				anything else then. If this was 'system' then we would also need a systempath 
				variable below scope which we could use to bring in a dependency e.g jar 
				file on local hard drive. Better to use mvn deploy:deploy-file for this though. -->
			<exclusions>
				<exclusion> <!-- exclude here so that we can bring the latest version below -->
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>14.0.1</version>
		</dependency>
		<dependency>
			<!-- have excluded hamcrest-core from junit dependency so that we could 
				bring in the latest version i.e. 1.3. Hamcrest version brought in with junit 
				4.10 is 1.1 -->
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>clean install</defaultGoal>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>

		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<!-- inside of here is plugin specific -->
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- mvn antrun:run -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<configuration>
					<target name="default_operation">
						<echo message="Running ant" />
					</target>
				</configuration>
				<executions>
					<!-- mvn clean -->
					<execution>
						<id>clean_message</id>
						<phase>clean</phase>
						<configuration>
							<target name="clean_operation">
								<echo message="Cleaning ${project.name}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- mvn package -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>all_in_one_package</id>
						<phase>package</phase>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.6</version>
							<reports>
								<report>dependencies</report>
								<report>scm</report>
							</reports>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.9</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.10</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.14.1</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.5.2</version>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>production</id>
			<!-- public properties -->
			<properties>
				<db.driver>com.mysql.AdminDriver</db.driver>
				<db.url>adminUrl</db.url>
			</properties>
		</profile>
		<profile>
			<id>qa</id>
			<!-- public properties -->
			<properties>
				<db.driver>com.mysql.qaDriver</db.driver>
				<db.url>qaUrl</db.url>
			</properties>
		</profile>
		<profile>
			<id>windows-qa</id>
			<!-- public properties -->
			<!-- By default this uses OR not AND but it is possible to use a plugin 
				to change the activation to use AND => google AND-ACTIVATION-PROFILE-SELECTOR -->
			<activation>
				<os>
					<name>Linux</name>
				</os>
				<property>
					<name>foo</name>
					<value>bar</value>
				</property>
				<file>
					<exists>src/main/resources/database.properties</exists>
				</file>
			</activation>
			<properties>
				<db.driver>com.postgres.Driver</db.driver>
				<db.url>jdbc:postgres://localhost/wqa</db.url>
			</properties>
		</profile>
	</profiles>

	<organization>
		<name>${company.name}</name>
		<url>${company.url}</url>
	</organization>
	<developers>
		<developer>
			<id>dan</id>
			<name>Daniel</name>
			<roles>
				<role>>dev</role>
			</roles>
		</developer>
		<developer>
			<id>joe</id>
			<name>joe moloney</name>
			<roles>
				<role>>dev</role>
			</roles>
		</developer>
	</developers>
</project>
